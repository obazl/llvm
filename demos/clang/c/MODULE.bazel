module(
    name = "demos",
    # version of this module, not llvm
    version = "1.0.0",
    compatibility_level = 1,
    bazel_compatibility = [">=6.0.0"]
)

bazel_dep(name = "obazl_llvm")
local_path_override(
    module_name = "obazl_llvm",
    path = "../../..",
)

llvm = use_extension(
    "@obazl_llvm//extensions:llvm.bzl",
    "llvm"
)

LLVM_VERSION = "17.0.1"

llvm.config(
    ## only for downloading
    version = LLVM_VERSION,
    # extension detects whether llvm_root
    # points to a distro or a local src build

    # @demos won't work, with:
    # llvm_root = "@demos//.config/llvm:root"
    # we get an error.

    ## so to use local .config/llvm:root use @@:
    llvm_root = "@@//.config/llvm:demos_root"

    ## single @// also won't work
)
use_repo(llvm, "llvm")
register_toolchains("@llvm//toolchain:all")

llvm.clang_c_sdk()
use_repo(llvm, "clang_c_sdk")

################################################################
bazel_dep(name = "platforms",    version = "0.0.7")
bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "cc_config",    version = "1.0.0")

# bazel_dep(name = "ncurses", version = "6.4")
# # on macos, ncurses comes with the sdks,
# # so linker knows where to search

# bazel_dep(name = "zlib", version = "1.3")

bazel_dep(name = "zstd", version = "1.5.5")
